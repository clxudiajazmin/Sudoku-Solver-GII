{"ast":null,"code":"var _jsxFileName = \"/Users/claudiasoria/Downloads/Sudoku-Solver-GII/Sudoku-Solver-GII/src/components/Camera/Camera.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect, useState } from 'react';\nimport './camera.css';\nimport Processor from \"../Procesador/Processor\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst processor = new Processor();\n\nfunction Camera() {\n  _s();\n\n  const videoRef = useRef(null);\n  const previewCanvasRef = useRef(null);\n  const photoRef = useRef(null);\n  const [videoWidth, setVideoWidth] = useState(100);\n  const [videoHeight, setVideoHeight] = useState(100);\n  const [hasPhoto, setHasPhoto] = useState(false);\n  const [isProceso, setProceso] = useState(true);\n  useEffect(() => {\n    const video = videoRef.current;\n\n    if (video) {\n      processor.startVideo(video).then(() => console.log(\"VÃ­deo Iniciado\"), error => alert(error.message));\n    }\n  }, [videoRef]);\n  useEffect(() => {\n    const interval = window.setInterval(() => {\n      const canvas = previewCanvasRef.current;\n\n      if (canvas && processor.isVideoRunning && isProceso) {\n        const context = canvas.getContext(\"2d\");\n\n        if (context) {\n          context.drawImage(processor.video, 0, 0);\n\n          if (processor.corners) {\n            const {\n              topLeft,\n              topRight,\n              bottomLeft,\n              bottomRight\n            } = processor.corners;\n            context.strokeStyle = \"rgba(0,0,0,1)\";\n            context.fillStyle = \"rgba(0,0,0,0.1)\";\n            context.lineWidth = 3;\n            context.beginPath();\n            context.moveTo(topLeft.x, topLeft.y);\n            context.lineTo(topRight.x, topRight.y);\n            context.lineTo(bottomRight.x, bottomRight.y);\n            context.lineTo(bottomLeft.x, bottomLeft.y);\n            context.closePath();\n            context.stroke();\n            context.fill();\n          }\n\n          if (processor.gridLines) {\n            context.strokeStyle = \"rgba(0,0,0,1)\";\n            context.lineWidth = 2;\n            processor.gridLines.forEach(line => {\n              context.moveTo(line.p1.x, line.p1.y);\n              context.lineTo(line.p2.x, line.p2.y);\n            });\n            context.stroke();\n          }\n\n          if (processor.solvedPuzzle) {\n            context.fillStyle = \"rgba(230,14,14,1)\";\n\n            for (let y = 0; y < 9; y++) {\n              for (let x = 0; x < 9; x++) {\n                if (processor.solvedPuzzle[y][x]) {\n                  const {\n                    digit,\n                    digitHeight,\n                    digitRotation,\n                    position,\n                    conocido\n                  } = processor.solvedPuzzle[y][x];\n\n                  if (!conocido) {\n                    context.font = `bold ${digitHeight}px sans-serif`;\n                    context.translate(position.x, position.y);\n                    context.rotate(Math.PI - digitRotation);\n                    context.fillText(digit.toString(), -digitHeight / 4, digitHeight / 3);\n                    context.setTransform();\n                  }\n                }\n              }\n            }\n\n            console.log(processor.solvedPuzzle);\n          }\n        }\n      }\n    }, 100);\n    return () => {\n      window.clearInterval(interval);\n    };\n  }, [previewCanvasRef, isProceso]);\n  useEffect(() => {\n    function videoReadyListener(_ref) {\n      let {\n        width,\n        height\n      } = _ref;\n      setVideoWidth(width);\n      setVideoHeight(height);\n    }\n\n    processor.on(\"videoReady\", videoReadyListener);\n    return () => {\n      processor.off(\"videoReady\", videoReadyListener);\n    };\n  });\n\n  const photo = () => {\n    const width = videoWidth;\n    const height = videoHeight;\n    let video = previewCanvasRef.current;\n    let photo = photoRef.current;\n    photo.width = width;\n    photo.height = height;\n    let ctx = photo.getContext('2d');\n    ctx.drawImage(video, 0, 0, width, height);\n    setProceso(false);\n    setHasPhoto(true);\n  };\n\n  const close = () => {\n    let photo = photoRef.current;\n    let ctx = photo.getContext('2d');\n    ctx.clearRect(0, 0, photo.width, photo.height);\n    setProceso(true);\n    setHasPhoto(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sudoku__camera\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sudoku__camera-video\",\n      children: [/*#__PURE__*/_jsxDEV(\"video\", {\n        ref: videoRef,\n        className: \"video-preview\",\n        width: 10,\n        height: 10,\n        playsInline: true,\n        muted: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: previewCanvasRef,\n        className: \"preview-canvas\",\n        width: videoWidth,\n        height: videoHeight\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"photoB \",\n        onClick: photo,\n        children: \"Capturar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: 'result ' + (hasPhoto ? 'hasPhoto' : ''),\n        children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: photoRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"closeB \",\n          onClick: close,\n          children: \"Cerrar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Camera, \"a7iA95W/NKDAuwi05FFs4cLhrAk=\");\n\n_c = Camera;\nexport default Camera;\n\nvar _c;\n\n$RefreshReg$(_c, \"Camera\");","map":{"version":3,"sources":["/Users/claudiasoria/Downloads/Sudoku-Solver-GII/Sudoku-Solver-GII/src/components/Camera/Camera.tsx"],"names":["React","useRef","useEffect","useState","Processor","processor","Camera","videoRef","previewCanvasRef","photoRef","videoWidth","setVideoWidth","videoHeight","setVideoHeight","hasPhoto","setHasPhoto","isProceso","setProceso","video","current","startVideo","then","console","log","error","alert","message","interval","window","setInterval","canvas","isVideoRunning","context","getContext","drawImage","corners","topLeft","topRight","bottomLeft","bottomRight","strokeStyle","fillStyle","lineWidth","beginPath","moveTo","x","y","lineTo","closePath","stroke","fill","gridLines","forEach","line","p1","p2","solvedPuzzle","digit","digitHeight","digitRotation","position","conocido","font","translate","rotate","Math","PI","fillText","toString","setTransform","clearInterval","videoReadyListener","width","height","on","off","photo","ctx","close","clearRect"],"mappings":"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","sourcesContent":["import React, {useRef, useEffect, useState} from 'react';\nimport './camera.css';\nimport Processor, { VideoReadyPayload } from \"../Procesador/Processor\";\n\n\nconst processor = new Processor();\n\nfunction Camera() {\n\n  const videoRef = useRef<HTMLVideoElement>(null);\n  const previewCanvasRef = useRef<HTMLCanvasElement>(null);\n  const photoRef = useRef(null);\n\n  const [videoWidth, setVideoWidth] = useState(100);\n  const [videoHeight, setVideoHeight] = useState(100);\n  const [hasPhoto, setHasPhoto] = useState(false);\n  const [isProceso, setProceso] = useState(true);\n\n  useEffect(() => {\n    const video = videoRef.current;\n    if (video) {\n      processor.startVideo(video).then(\n        () => console.log(\"VÃ­deo Iniciado\"),\n        (error) => alert(error.message)\n      );\n    }\n  }, [videoRef]);\n\n  useEffect(() => {\n    const interval = window.setInterval(() => {\n      const canvas = previewCanvasRef.current;\n      if (canvas && processor.isVideoRunning && isProceso) {\n        const context = canvas.getContext(\"2d\");\n        if (context) {\n          context.drawImage(processor.video, 0, 0);\n          if (processor.corners) {\n            const {\n              topLeft,\n              topRight,\n              bottomLeft,\n              bottomRight,\n            } = processor.corners;\n            context.strokeStyle = \"rgba(0,0,0,1)\";\n            context.fillStyle = \"rgba(0,0,0,0.1)\";\n            context.lineWidth = 3;\n            context.beginPath();\n            context.moveTo(topLeft.x, topLeft.y);\n            context.lineTo(topRight.x, topRight.y);\n            context.lineTo(bottomRight.x, bottomRight.y);\n            context.lineTo(bottomLeft.x, bottomLeft.y);\n            context.closePath();\n            context.stroke();\n            context.fill();\n          }\n          if (processor.gridLines) {\n            context.strokeStyle = \"rgba(0,0,0,1)\";\n            context.lineWidth = 2;\n            processor.gridLines.forEach((line) => {\n              context.moveTo(line.p1.x, line.p1.y);\n              context.lineTo(line.p2.x, line.p2.y);\n            });\n            context.stroke();\n          }\n          if (processor.solvedPuzzle) {\n            context.fillStyle = \"rgba(230,14,14,1)\";\n            for (let y = 0; y < 9; y++) {\n              for (let x = 0; x < 9; x++) {\n                if (processor.solvedPuzzle[y][x]) {\n                  const {\n                    digit,\n                    digitHeight,\n                    digitRotation,\n                    position,\n                    conocido,\n                  } = processor.solvedPuzzle[y][x];\n                  if (!conocido) {\n                    context.font = `bold ${digitHeight}px sans-serif`;\n                    context.translate(position.x, position.y);\n                    context.rotate(Math.PI - digitRotation);\n                    context.fillText(\n                      digit.toString(),\n                      -digitHeight / 4,\n                      digitHeight / 3\n                    );\n                    context.setTransform();\n                  }\n                }\n              }\n            }\n            console.log(processor.solvedPuzzle);\n          }\n        }\n      }\n    }, 100);\n    return () => {\n      window.clearInterval(interval);\n    };\n  }, [previewCanvasRef, isProceso]);\n\n  useEffect(() => {\n    function videoReadyListener({ width, height }: VideoReadyPayload) {\n      setVideoWidth(width);\n      setVideoHeight(height);\n    }\n    processor.on(\"videoReady\", videoReadyListener);\n    return () => {\n      processor.off(\"videoReady\", videoReadyListener);\n    };\n  });\n\n  const photo= () =>{\n    const width= videoWidth;\n    const height = videoHeight;\n    let video = previewCanvasRef.current;\n    let photo = photoRef.current;\n\n    photo.width = width;\n    photo.height = height;\n\n    let ctx = photo.getContext('2d');\n    ctx.drawImage(video, 0, 0, width, height);\n    setProceso(false);\n    setHasPhoto(true);\n  }\n\n  const close= () =>{\n    let photo = photoRef.current;\n    let ctx = photo.getContext('2d');\n    ctx.clearRect(0,0,photo.width, photo.height);\n    setProceso(true);\n    setHasPhoto(false);\n  }\n\n  return (\n      <div className=\"sudoku__camera\">\n        <div className=\"sudoku__camera-video\">\n      {}\n            <video\n              ref={videoRef}\n              className=\"video-preview\"\n              width={10}\n              height={10}\n              playsInline\n              muted\n            />\n            <canvas\n              ref={previewCanvasRef}\n              className=\"preview-canvas\"\n              width={videoWidth}\n              height={videoHeight}\n            />\n            <button className =\"photoB \" onClick={photo}>Capturar</button>\n\n            <div className={'result ' + (hasPhoto ? 'hasPhoto' : '')}>\n              <canvas ref={photoRef}/>\n              <button className =\"closeB \" onClick={close} >Cerrar</button>\n            </div>\n      </div>\n    </div>\n    \n  );\n}\n\nexport default Camera"]},"metadata":{},"sourceType":"module"}